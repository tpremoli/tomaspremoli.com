[{"id":11,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/ADMIRE-DL/thumb.PNG","video":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/ADMIRE-DL/video.mp4","title":"ADMIRE-DL","blurb":"Alzheimer's Disease MRI Interpretation, Recognition, & Evaluation - Deep Learning","description":"# ADMIRE-DL\r\n\r\n## Introduction\r\n\r\nThis is my Alzheimer's Disease MRI Identification, Recognition, & Evaluation thesis project. The goal of this project is to develop a deep learning model that can identify and recognize Alzheimer's Disease from MRI scans. Data is provided by the Alzheimer's Disease Neuroimaging Initiative (ADNI). The project is divided into 3 parts:\r\n\r\n1. Data preprocessing\r\n2. Model training\r\n3. Model evaluation\r\n\r\nAnd is accompanied by a report and a presentation.\r\n\r\nThis program can be used to preprocess data, train a model, and evaluate a CNN model.\r\n\r\n## Technologies used\r\n\r\nThis program was developed using Python and Keras/Tensorflow. CUDA was used to speed up training on a GPU, and FSL was used to preprocess the data. \r\n\r\nThis was my largest project to date, and I learned a lot about deep learning, data preprocessing, and what goes into a long-term machine learning project. I also learned about the challenges of working with medical data, while also exploring CNNs and their applications.\r\n\r\n## Feedback and final results\r\n\r\nOverall, I am very happy with the results of this project. I developed my experience with deep learning significantly. I am also very happy with the results of the models created, and I am excited to continue working on similar projects.\r\n\r\nI am very happy with the final paper and presentation. I learned a lot about writing a presenting technical information, and I am very happy with the results.","date_created":"2023-05-02","github_link":"https://github.com/tpremoli/ADMIRE-DL","link":"","is_visible":true,"pdf":1},{"id":6,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/tomaspremoli.com/thumb.PNG","video":null,"title":"tomaspremoli.com","blurb":"Wait a second...","description":"# tomaspremoli.com\r\n\r\n## Introduction\r\n\r\ntomaspremoli.com is my personal portfolio website. It is a dynamic website, meaning I can modify its contents without having to redeploy the application. The design allows me to update my education, my work experiences,  and skills, along with adding more portfolio entries and updating my picture & CV. Beyond that, the app is fully responsive (Hello mobile users!)\r\n\r\nThere's not much more to say here... You're on the site; **explore it!** \r\n\r\n## Technologies used\r\n\r\nThe application was built using Django for the backend, and React for the frontend. This is my second Django-React app, and I must say, it is much cleaner and more powerful than my first attempt.\r\n\r\nBeyond that, this application was launched on AWS Elastic Beanstalk, using an RDS database for storing individual db entries, and an s3 bucket to hold all the media. This really opened my eyes as to how much easier deploying an application could be, and the benefits I could get from using different AWS services to my advantage. In the future I will take the same approach.\r\n\r\n## Feedback and final results\r\n\r\nI'm very happy with the current state of this site. I got to create something that is truly helpful for me to have as a CS major, while learning even more about fullstack development in the process. In the future, I hope to improve mobile compatibility with the CV pdf display, and to have a more thorough `About Me` section in the site. If there's something I missed...  [Contact me!](http://django-env.eba-ijpuib8d.us-east-1.elasticbeanstalk.com/#/contact-me)","date_created":"2022-09-28","github_link":"https://github.com/tpremoli/tomaspremoli.com","link":"http://django-env.eba-ijpuib8d.us-east-1.elasticbeanstalk.com/","is_visible":true,"pdf":null},{"id":4,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Posterise.it!/thumb.PNG","video":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Posterise.it!/video.mp4","title":"Posterise.it!","blurb":"A Spotify-enabled polaroid-style poster generator!","description":"# Posterise.it!\r\n\r\n## Introduction\r\n\r\nPosterise.it! is a web application that allows users to easily create polaroid-like posters for their favourite songs, playlists, artists, and albums. The app integrates with Spotify to retrieve album covers and tracklists, along with other necessary data.\r\n\r\nA poster is simply created by pasting the Spotify resource's URI or URL, and the app automatically retrieves all the necessary data. Individual posters can be modified as desired, changing attributes such as text alignment, flavor text, poster color, and options to remove `(Remastered)` text from posters.\r\n\r\n## Technologies used\r\n\r\nThe application was built using Django for the backend, and React with Material UI for the frontend. It was also hosted using a Google Cloud GCE machine, using apache to host everything.\r\n\r\nThis was my first experience developing a project using React for the frontend, and my first time deploying an app on the web on my own. Deploying was a difficult experience, however in the end I was satisfied with the overall performance of the program.\r\n\r\n## Feedback and final results\r\n\r\nI was very satisfied with the final result of the application. The program satisfied all the needs I set out to achieve (Attractive posters, ease-of-use, and customization). I later used this application to print various posters to hang in my room, and some to gift to friends and family.","date_created":"2022-05-18","github_link":"https://github.com/tpremoli/Spotifier","link":"","is_visible":true,"pdf":null},{"id":3,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/UniExplore/thumb.jpg","video":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/UniExplore/video.mp4","title":"UniExplore","blurb":"A university exploration and challenge game with social networking features","description":"# UniExplore\r\n\r\n## Introduction\r\n\r\nUniExplore is an application designed to help students explore their university and connect with their peers. Students can complete challenges at various locations across campus, see what their classmates did for those challenges, and like the responses of others.\r\n\r\nUsers earn points from completing challenges at different, and points for the likes that their posts get. There is features to follow users and comment on posts, along with moderation features to keep users safe.\r\n\r\nGame-masters can also be assigned to create custom challenges as desired, and new challenges are released once a week for users to complete around campus. There is also a daily riddle system, where users have to identify the location that the riddle hints to.\r\n\r\n## Technologies used\r\n\r\nThe application was built using Django for the backend, and custom javascript, html, and css for the frontend.\r\n\r\nI primarily worked on the mapping functionality, and the javascript associated with it. I focused also on creating the liking and commenting scripts, handling image uploading name settings, and creating a weekly challenge system for the app.\r\n\r\n## Feedback and final results\r\n\r\nWe were very happy with our final assignment, as we achieved all the requirements we set out to do at the beginning of the task. We ended up getting a good grade, and user reception of the program was positive.\r\n    \r\n## Authors\r\n\r\n- Conor Behard Roberts\r\n- Kate Belson\r\n- Michael Hills\r\n- Tomas Premoli\r\n- Jack Purkiss\r\n- Lucas Smith","date_created":"2022-03-25","github_link":"https://github.com/ExeterTeam25/group-software-project","link":"","is_visible":true,"pdf":null},{"id":9,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Huffman%20Encoder/thumb.PNG","video":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Huffman%20Encoder/video.mp4","title":"Huffman Encoder","blurb":"A huffman codes text compression algorithm","description":"# Huffman encoder\r\n\r\n## Introduction\r\n\r\nThe Huffman Encoder is a command-line program that implements a Huffman Code compression algorithm to compress text files. The program takes in a utf-8 encoded text file, and outputs a compressed file along with a key file which is later used to decompress the text files.\r\n\r\nThe program accounts for different text file sizes and trailing bits in its compression, so the first 4 bytes contains a number describing how many bytes are in the text file for the file to correctly parse the data. The program was tested extensively to ensure that the input files were identical to files that had been compressed then decompressed.\r\n\r\nThe program outputs the original and final file sizes, the compression percentage. and the amount of time taken to compress the file. The program allows the user to use key files used in compressing other texts to test the performance of different key file structures. Key files are simply hashmaps of characters and their frequency. The Huffman tree is therefore reconstructed during every compression and decompression, as this program favored compression % over time taken. I created a report for the program's performance, which can be seen in the gallery below.\r\n\r\n## Technologies used\r\n\r\nThis application was implemented using plain Java.\r\n\r\n## Feedback and final results\r\n\r\nOverall the application was very successful. The program was able to compress text files (especially large ones) extremely effectively. I managed to get a score of 96/100 for my final program and report. This application was a really interesting project  for me, and I learnt a lot about Data Structures & Algorithms and their real-world applications.","date_created":"2021-03-26","github_link":"","link":"","is_visible":true,"pdf":null},{"id":8,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Covid%20Contact%20Tracer/thumb.PNG","video":null,"title":"Covid Contact Tracer","blurb":"A COVID-19 contact tracing & reporting app","description":"# COVID - 19 Contact Tracer\r\n\r\n## Introduction\r\n\r\nThe COVID - 19 Contact Tracer is a web app that enables COVID-19 contact tracing and reporting. Users are able to create an account and see infections on a map, where users have tested positive for COVID-19.\r\n\r\nUsers can report locations that they have visited, and the app automatically identifies where two users have been in similar locations when one tests positive. The at-risk user is then notified about the potential infection, and prompts them to take a covid test.\r\n\r\nThe program has functionality for account creation & password encryption, changing of settings (such as infection range), AJAX, and REST API access. \r\n\r\n## Technologies used\r\n\r\nThis app was built with php for the backend, and custom HTML, CSS, and JavaScript for the frontend.\r\n\r\nThis was my first time using php and JavaScript, along with my first time using SQL and creating a web app.\r\n\r\n## Feedback and final results\r\n\r\nI was satisfied with the final result for this project. I managed to get a 94/100 for my work on this project.  It was my first experience with web development, and it opened my eyes to the many different technologies that work together to keep the internet running.","date_created":"2021-03-19","github_link":"https://github.com/tpremoli/COVID-19-Contact-Tracer","link":"","is_visible":true,"pdf":null},{"id":7,"thumbnailpic":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Student%20Data%20Hub/thumb.PNG","video":"https://d2421wmyymg4zq.cloudfront.net/api/media/portfolio/Student%20Data%20Hub/video.mp4","title":"Student Data Hub","blurb":"A student grade & prediction management program","description":"# Student Data Hub\r\n\r\n## Introduction\r\n\r\nStudent Data Hub is a Java application for teachers to track assignments, classes, and student's grades. The teacher I created this for wanted a simple process for predicting each student's grade on an assignment, and finding discrepancies between expected grades and final grades. The program also allows for the creation of assignment, student, and class reports to judge the accuracy of each prediction, and performance over time.\r\n\r\nThe program allows the user to add students with their details, including names, emails, and what class they're in. The user can also create assignments, where they can select the grading standards (based on the ib grading standards), set dates for assignments, and add individual students and classes to the assignment takers.\r\n\r\nAfter that, the user can add the grades predicted by the student, the grades predicted by the teacher, and the final grades in each standard achieved overall. The predicted grades are compared to the final grades and discrepancies are displayed to the user.\r\n\r\nThe application therefore can create reports for individual students, per assignments, or per class, which can be saved as PDFs or printed. \r\n\r\nFinally, there is an account system to protect the student data, and the application can be used to send emails to students about the grade discrepancies.\r\n\r\n## Technologies used\r\n\r\nThis application was programmed using Java, using Java Swing for the UI. \r\n\r\nOn top of that, the application employed the following libraries:\r\n- [JFreeChart](https://www.jfree.org/jfreechart/) to generate charts used in the reports\r\n- [JavaMail](https://javaee.github.io/javamail/) to send emails to students\r\n- [SwingX](https://github.com/ebourg/swingx) for more fancy UI components\r\n\r\n## Feedback and final results\r\n\r\nI was extremely satisfied with the final application. This was by far the most complex program I had worked on at the time, and it achieved everything it set out to do. I managed to get a 7/7 for my implementation and design, and the teacher I created the program for was very happy with the results.\r\n\r\nIn hindsight, this was probably one of my greatest programming learning experiences. I learnt a lot of the development process and how to plan a big project, and I think the results speak for themselves.\r\n\r\nThis project was a huge undertaking, especially considering my knowledge at the time, and I wouldn't take nearly the same approach to create it today. Regardless, I am still very proud of the final product, as it is my first **real** application, and considering the circumstances, I did a great job.","date_created":"2020-02-13","github_link":"","link":"","is_visible":true,"pdf":null}]